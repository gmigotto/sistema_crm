@{
    ViewData["Title"] = "";
    Layout = "../Shared/_Layout.cshtml";


}
<head>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="apple-touch-icon" sizes="76x76" href="~/lib/bootstrap/assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="~/lib/bootstrap/assets/img/favicon.png" />
    <title>
        Gráfico de Vendas
    </title>
    <!--     Fonts and icons     -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
    <!-- Nucleo Icons -->
    <link href="../assets/css/nucleo-icons.css" rel="stylesheet" />
    <link href="../assets/css/nucleo-svg.css" rel="stylesheet" />
    <!-- Font Awesome Icons -->
    <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
    <link href="../assets/css/nucleo-svg.css" rel="stylesheet" />
    <!-- CSS Files -->
    <link id="pagestyle" href="~/lib/bootstrap/assets/css/soft-ui-dashboard.css" rel="stylesheet" />
    <!-- Nepcha Analytics (nepcha.com) -->
    <!-- Nepcha is a easy-to-use web analytics. No cookies and fully compliant with GDPR, CCPA and PECR. -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js" integrity="sha512-3gJwYpMe3QewGELv8k/BX9vcqhryRdzRMxVfq6ngyWXwo03GFEzjsUm8Q7RZcHPHksttq7/GFoxjCVUjkjvPdw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js" integrity="sha512-XtmMtDEcNz2j7ekrtHvOVR4iwwaD6o/FUJe6+Zq+HgcCsk3kj4uSQQR8weQ2QVj1o0Pk6PwYLohm206ZzNfubg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>

        jQuery(function ($) {
            $('#cpf').mask('000.000.000-00');
            $('#cnpj').mask('00.000.000/0000-00');
            $('#telefone').mask('(00) 00000-0000');
        })
    </script>
    <style>



        .btn-outline-primary {
            --bs - btn - color: #cb0c9f;
            --bs - btn - border - color: #cb0c9f;
            --bs - btn - hover - color: #fff;
            --bs - btn - hover - bg: #cb0c9f;
            --bs - btn - hover - border - color: #cb0c9f;
            --bs - btn - focus - shadow - rgb: 203, 12, 159;
            --bs - btn - active - color: #fff;
            --bs - btn - active - bg: #cb0c9f;
            --bs - btn - active - border - color: #cb0c9f;
            --bs - btn - active - shadow: none;
            --bs - btn - disabled - color: #cb0c9f;
            --bs - btn - disabled - bg: transparent;
            --bs - btn - disabled - border - color: #cb0c9f;
            --bs - gradient: none;
        }

        .input {
            display: inline - block; /* Define as caixas de texto para exibição em linha */
            width: 150px; /* Largura das caixas de texto */
            margin - right: 10px; /* Espaçamento entre as caixas de texto */
        }

        .sidenav {
            height: 100%; /* Full-height: remove this if you want "auto" height */
            width: 160px; /* Set the width of the sidebar */
            position: fixed; /* Fixed Sidebar (stay in place on scroll) */
            z - index: 0; /* Stay on top */
            top: 0; /* Stay at the top */
            left: auto;
            background - color: #fff; /* Black */
            overflow - x: hidden; /* Disable horizontal scroll */
            padding - top: 50px;
        }

        .crm {
            margin-top: 20px;
        }

    </style>
    <script defer data-site="YOUR_DOMAIN_HERE" src="https://api.nepcha.com/js/nepcha-analytics.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


</head>

<!-- Link para Font Awesome para os ícones -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<body class="g-sidenav-show bg-gray-100">
    <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg">

        <!-- Título da Página -->
        <div class="container-fluid py-4">
            <h2 class="text-center text-primary mb-4"><i class="fas fa-chart-line me-2"></i>Relatório de Vendas</h2>
        </div>

        <div class="container-fluid d-flex flex-wrap justify-content-center gap-4 mb-4">
            <!-- Card 1: Relatórios de Vendas -->
            <div class="card shadow-sm p-4" style="max-width: 45%; min-width: 300px;">
                <h5 class="text-center text-secondary"><i class="fas fa-chart-line me-2"></i>Relatórios de Vendas</h5>
                <div class="border-radius-lg py-3 text-center">
                    <p class="text-muted mb-4">Visualize os relatórios de vendas dos últimos meses.</p>
                    <div class="d-flex flex-column gap-3">
                        <div class="d-flex flex-column gap-3">
                            @using (Html.BeginForm("GerarRelatoriosPDF", "Relatorio", FormMethod.Get))
                            {
                              
                                   <label for="dataInicio" class="form-label">Data Início:</label>
                                  <input type="date" id="dataInicio" name="dataInicio" class="form-control"  required />
                                
                                <label for="dataFim" class="form-label">Data Fim:</label>
                                <input type="date" id="dataFim" name="dataFim" class="form-control" required />
                                

                                <button type="submit" class="btn btn-outline-primary">Gerar Relatório</button>
                            }

                        </div>
                    </div>
                </div>
            </div>

            <!-- Card 2: Relatórios de Clientes -->
            <div class="card shadow-sm p-4" style="max-width: 45%; min-width: 300px;">
                <h5 class="text-center text-secondary"><i class="fas fa-user-friends me-2"></i>Relatórios de Clientes</h5>
                <div class="border-radius-lg py-3 text-center">
                    <p class="text-muted mb-4">Acompanhe os relatórios detalhados de seus clientes.</p>
                   @if (TempData["Mensagem"] != null)
                    {
                        <div class="alert alert-warning" role="alert">
                            @TempData["Mensagem"]
                        </div>
                    }
                                    <div class="d-flex flex-column gap-3">
                        @using (Html.BeginForm("GerarRelatoriosClientesPDF", "Relatorio", FormMethod.Get))
                        {

                            <label for="dataInicio" class="form-label">Data Início:</label>
                            <input type="date" id="dataInicio" name="dataInicio" class="form-control" required  />

                            <label for="dataFim" class="form-label">Data Fim:</label>
                            <input type="date" id="dataFim" name="dataFim" class="form-control" required />

                            <button type="submit" class="btn btn-outline-primary">Gerar Relatório</button>
                        }
                        
                    </div>
                </div>
            </div>
        </div>

            

        <script src="script.js"></script>
        <!-- Área de Gráficos Centralizada -->
        <div class="container-fluid d-flex flex-wrap justify-content-center gap-4" style="margin-bottom: 30px;">
            <!-- Gráfico Vendas por Mês -->
            <div class="card shadow-sm p-4" style="max-width: 45%;">
                <h5 class="text-center text-secondary"><i class="fas fa-chart-line me-2"></i>Vendas por Mês</h5>
                <div class="border-radius-lg py-3 pe-1 mb-3">
                    <div id="canvas-holder" style="position: relative; height:auto; width:100%">
                        <canvas id="vendasChart" class="chart-canvas" width="400" height="300"></canvas>
                    </div>
                </div>
            </div>
            <!-- Gráfico Vendas por Cliente -->
            <div class="card shadow-sm p-4" style="max-width: 45%;">
                <h5 class="text-center text-secondary"><i class="fas fa-user-friends me-2"></i>Vendas por Cliente</h5>
                <div class="border-radius-lg py-3 pe-1 mb-3">
                    <div id="canvas-holder" style="position: relative; height:auto; width:100%">
                        <canvas id="vendasClientes" class="chart-canvas" width="400" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid d-flex flex-wrap justify-content-center gap-4" style="margin-bottom: 30px;">

            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-header">
                        <h5 class="text-center text-secondary"><i class="fas fa-user-friends me-2"></i>Clientes por Segmento</h5>
                    </div>
                    <canvas id="graficoSegmentos" width="400" height="400"></canvas>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-header">
                        <h5 class="text-center text-secondary"><i class="fas fa-user-friends me-2"></i>Clientes por Status</h5>
                    </div>
                    <canvas id="graficoStatus" width="400" height="400"></canvas>
                </div>
            </div>
        </div>





        <!-- iframes ocultos para download -->
        <iframe id="downloadFrame" style="display: none;"></iframe>
        <iframe id="downloadFrame" style="display: none;"></iframe>

    </main>

    <style>
        /* Estilo para um visual mais moderno */
        h2, h5 {
            font-family: Arial, sans-serif;
            font-weight: 700;
            color: #1A73E8;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
            font-weight: 500;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 1rem;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #004085;
            }

        .card {
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            max-width: 45%;
            width: 100%;
        }

        .chart-canvas {
            padding: 15px;
            border-radius: 8px;
        }

        .text-secondary {
            color: #6c757d !important;
        }

        .container-fluid {
            display: flex;
            justify-content: center;
            gap: 2rem;
        }
    </style>

    <!-- Scripts para os gráficos e a função de geração de relatório -->
    <script>
        var labels = [@Html.Raw(ViewBag.Labels)];
        var valores = [@Html.Raw(ViewBag.Valores)];

        // Define a ordem dos meses desejada
        const monthOrder = [
            'January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'
        ];

        // Combina os labels e valores em pares para ordenação
        var dataPairs = labels.map((label, index) => ({ label: label, valor: valores[index] }));

        // Ordena os pares pela ordem dos meses
        dataPairs.sort((a, b) => monthOrder.indexOf(a.label) - monthOrder.indexOf(b.label));

        // Extrai os labels e valores ordenados
        labels = dataPairs.map(pair => pair.label);
        valores = dataPairs.map(pair => pair.valor);

        var ctx = document.getElementById('vendasChart').getContext('2d');
        var vendasChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Vendas por Mês',
                    data: valores,
                    borderColor: 'rgba(54, 162, 235, 1)', // Azul moderno
                    backgroundColor: 'rgba(54, 162, 235, 0.3)', // Fundo translúcido
                    fill: true,
                    borderWidth: 2,
                    tension: 0.4, // Suavização da linha
                    pointBackgroundColor: 'rgba(255, 99, 132, 1)', // Pontos em cor vibrante
                    pointRadius: 5, // Tamanho dos pontos
                    pointHoverRadius: 7, // Tamanho dos pontos ao passar o mouse
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        font: {
                            size: 20,
                            family: 'Arial, sans-serif',
                            weight: 'bold'
                        },
                        padding: {
                            top: 10,
                            bottom: 20
                        }
                    },
                    legend: {
                        display: true,
                        labels: {
                            color: '#666',
                            font: {
                                size: 14,
                                family: 'Arial, sans-serif'
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            display: true,
                            color: '#e5e5e5' // Cor suave para as linhas de grade
                        },
                        ticks: {
                            color: '#666',
                            font: {
                                size: 12
                            }
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            color: '#666',
                            font: {
                                size: 12
                            }
                        }
                    }
                }
            }
        });

    </script>

    <script>
        var ctx = document.getElementById('vendasClientes').getContext('2d');
        var vendasChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(ViewBag.Labels2)],
                datasets: [{
                    label: 'Vendas por Clientes',
                    data: [@Html.Raw(ViewBag.Valores2)],
                    borderColor: 'rgba(255, 105, 180, 1)',
                    backgroundColor: 'rgba(255, 182, 193, 0.2)',
                    fill: true,
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        font: {
                            size: 18
                        },
                        padding: {
                            top: 10,
                            bottom: 30
                        }
                    },
                    legend: {
                        display: false,
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            display: false
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <canvas id="graficoSegmentos" width="400" height="400"></canvas>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <canvas id="graficoSegmentos" width="400" height="400"></canvas>

    <script>
        var ctx = document.getElementById('graficoSegmentos').getContext('2d');
        var labels = @Html.Raw(ViewBag.Labels3);
        var valores = @Html.Raw(ViewBag.Valores3);

        console.log('Labels:', labels);
        console.log('Values:', valores);

        var total = valores.reduce((acc, val) => acc + val, 0); // Calcula o total dos valores

        var graficoSegmentos = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    data: valores,
                    backgroundColor: [
                        'rgba(255, 200, 50, 0.5)',   // Laranja vibrante translúcido
                        'rgba(255, 105, 180, 0.5)',  // Rosa vibrante translúcido
                        'rgba(100, 149, 237, 0.5)',  // Azul claro vibrante translúcido
                        'rgba(211, 211, 211, 0.5)',  // Cinza claro translúcido
                        'rgba(144, 238, 144, 0.5)'   // Verde claro vibrante translúcido
                    ],
                    borderColor: [
                        'rgb(255, 200, 50)',   // Laranja vibrante
                        'rgb(255, 105, 180)',  // Rosa vibrante
                        'rgb(100, 149, 237)',  // Azul claro vibrante
                        'rgb(211, 211, 211)',  // Cinza claro
                        'rgb(144, 238, 144)'   // Verde claro vibrante
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                let value = context.raw; // Valor do segmento
                                let percentage = ((value / total) * 100).toFixed(2); // Calcula a porcentagem
                                return `${context.label}: ${percentage}%`; // Exibe o rótulo e a porcentagem
                            }
                        }
                    }
                }
            }
        });
    </script>


    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Obtém o contexto do canvas
        var ctx = document.getElementById('graficoStatus').getContext('2d');

        // Obtém os dados passados pela ViewBag
        var labels = @Html.Raw(ViewBag.Labels4);
        var valores = @Html.Raw(ViewBag.Valores4);

        console.log('Labels:', labels); // Verifica os rótulos
        console.log('Values:', valores); // Verifica os valores

        // Calcula o total para as porcentagens
        var total = valores.reduce((acc, val) => acc + val, 0);

        // Criação do gráfico
        var graficoStatus = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    data: valores,
                    backgroundColor: [
                        'rgba(255, 200, 50, 0.5)',   // Laranja translúcido
                        'rgba(255, 105, 180, 0.5)',  // Rosa translúcido
                        'rgba(100, 149, 237, 0.5)',  // Azul translúcido
                        'rgba(211, 211, 211, 0.5)',  // Cinza translúcido
                        'rgba(144, 238, 144, 0.5)'   // Verde translúcido
                    ],
                    borderColor: [
                        'rgb(255, 200, 50)',   // Laranja
                        'rgb(255, 105, 180)',  // Rosa
                        'rgb(100, 149, 237)',  // Azul
                        'rgb(211, 211, 211)',  // Cinza
                        'rgb(144, 238, 144)'   // Verde
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom', // Legenda na parte inferior
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                let value = context.raw; // Obtém o valor do segmento
                                let percentage = ((value / total) * 100).toFixed(2); // Calcula a porcentagem
                                return `${context.label}: ${percentage}%`; // Retorna o rótulo e a porcentagem
                            }
                        }
                    }
                }
            }
        });
    </script>






@* 
    <script>
        function gerarRelatorioPDF(filtroPeriodo) {
            // Faz uma chamada GET para o método GerarRelatoriosPDF
            window.location.href = /Relatorio/GerarRelatoriosPDF ? filtroPeriodo = ${ filtroPeriodo };
        }
    </script>
    <script>
        function gerarRelatorioClientesPDF(filtroPeriodo) {
            // Faz uma chamada GET para o método GerarRelatoriosPDF
            window.location.href = /Relatorio/GerarRelatoriosClientesPDF ? filtroPeriodo = ${ filtroPeriodo };
        }
    </script> *@

    <script>
        function gerarRelatorioClientesPDF(filtroPeriodo) {
            // Lógica para gerar o relatório de clientes
            console.log(`Gerar relatório de clientes para os últimos ${filtroPeriodo} meses`);
            // Exemplo de redirecionamento ou requisição:
            window.location.href = `/Relatorio/GerarRelatoriosClientesPDF?filtroPeriodo=${filtroPeriodo}`;
        }

        function gerarRelatorioPDF(filtroPeriodo) {
            // Lógica para gerar o relatório de vendas
            console.log(`Gerar relatório de vendas para os últimos ${filtroPeriodo} meses`);
            // Exemplo de redirecionamento ou requisição:
            window.location.href = `/Relatorio/GerarRelatoriosPDF?filtroPeriodo=${filtroPeriodo}`;
        }
    </script>
</body>
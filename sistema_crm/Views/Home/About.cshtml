<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kanban Board</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Estilo geral */
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #f4f6f9;
            margin: 0;
            padding: 20px;
        }

        h3 {
            font-size: 1.2rem;
        }

        /* Quadro kanban */
        .kanban-board {
            display: flex;
            gap: 20px;
            width: 90%;
            max-width: 1200px;
        }

        .kanban-column {
            flex: 1;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 15px;
            transition: 0.3s;
        }

            .kanban-column:hover {
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            }

            .kanban-column h3 {
                margin-top: 0;
                text-align: center;
                color: #333;
                background-color: #e9ecef;
                padding: 8px;
                border-radius: 5px;
            }

        /* Estilo dos cards */
        .kanban-card {
            background-color: #e3f2fd;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
            cursor: move;
            transition: 0.3s;
            font-size: 1rem;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

            .kanban-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            }

        /* Botões para adicionar cards */
        .add-card-btn {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: bold;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s;
        }

            .add-card-btn:hover {
                background-color: #0056b3;
            }

    </style>
</head>
<body>
    <div class="kanban-board">
        <!-- Coluna A FAZER -->
        <div class="kanban-column" id="todo">
            <h3><i class="fas fa-tasks"></i> A Fazer</h3>
            <button class="add-card-btn" onclick="addCard('todo')"><i class="fas fa-plus-circle"></i> Adicionar Tarefa</button>
        </div>

        <!-- Coluna FAZENDO -->
        <div class="kanban-column" id="inProgress">
            <h3><i class="fas fa-spinner"></i> Fazendo</h3>
            <button class="add-card-btn" onclick="addCard('inProgress')"><i class="fas fa-plus-circle"></i> Adicionar Tarefa</button>
        </div>

        <!-- Coluna FEITO -->
        <div class="kanban-column" id="done">
            <h3><i class="fas fa-check-circle"></i> Feito</h3>
            <button class="add-card-btn" onclick="addCard('done')"><i class="fas fa-plus-circle"></i> Adicionar Tarefa</button>
        </div>
    </div>

    <script>
        // Função para adicionar card
        function addCard(columnId) {
            const taskText = prompt("Digite a atividade:");
            if (taskText) {
                const card = document.createElement("div");
                card.className = "kanban-card";
                card.draggable = true;
                card.ondragstart = dragStart;
                card.innerText = taskText;
                document.getElementById(columnId).appendChild(card);
            }
        }

        // Eventos de arrastar e soltar
        function dragStart(event) {
            event.dataTransfer.setData("text", event.target.id);
            event.target.classList.add("dragging");
        }
        function dragOver(event) {
            event.preventDefault();
        }
        function drop(event) {
            event.preventDefault();
            const cardId = event.dataTransfer.getData("text");
            const card = document.getElementById(cardId);
            event.target.appendChild(card);
        }

        // Adiciona eventos às colunas
        document.querySelectorAll(".kanban-column").forEach(column => {
            column.ondrop = drop;
            column.ondragover = dragOver;
        });
    </script>
</body>
</html>
